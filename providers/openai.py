import openai
import os
from providers.base import BaseAgent

class OpenAIAgent(BaseAgent):
    def __init__(self, api_key, model):
        """
        ChatGPT Agent
        
        Args:
            api_key (str): OpenAI API key
            model (str): ‡πÇ‡∏°‡πÄ‡∏î‡∏•‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÉ‡∏ä‡πâ
        """
        super().__init__(model)
        self.client = openai.OpenAI(
            api_key=api_key
        )
        
    def chat(self, message, system_prompt):
        """
        ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÑ‡∏õ‡∏´‡∏≤ ChatGPT ‡πÅ‡∏•‡∏∞‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö
        
        Args:
            message (str): ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á
            system_prompt (str): system prompt
            
        Returns:
            str: ‡∏Å‡∏≤‡∏£‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡∏à‡∏≤‡∏Å ChatGPT
        """
        # ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏•‡∏á‡πÉ‡∏ô conversation history
        self._add_user_message(message)
        
        # ‡∏™‡∏£‡πâ‡∏≤‡∏á messages ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö API call
        messages = self._prepare_messages(system_prompt)
        
        try:
            # ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å OpenAI API
            response = self.client.chat.completions.create(
                model=self.model,
                messages=messages,
                temperature=float(os.getenv("TEMPERATURE", 0.7))
            )
            
            # ‡∏î‡∏∂‡∏á‡∏Å‡∏≤‡∏£‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö
            assistant_message = response.choices[0].message.content
            
            # ‡πÅ‡∏™‡∏î‡∏á token usage
            usage = response.usage
            print(f"\nüìä Token Usage:")
            print(f"   Input tokens: {usage.prompt_tokens}")
            print(f"   Output tokens: {usage.completion_tokens}")
            print(f"   Total tokens: {usage.total_tokens}")
            print("-" * 50)
            
            # ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡∏•‡∏á‡πÉ‡∏ô conversation history
            self._add_assistant_message(assistant_message)
            
            return assistant_message
            
        except Exception as e:
            print(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: {e}")
            return None